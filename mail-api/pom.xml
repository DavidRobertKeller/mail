<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>mail-api</groupId>
	<artifactId>mail-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>

    <properties>
 		<java.version>14</java.version>
 		<spring-boot.version>2.3.3.RELEASE</spring-boot.version>
 		<spring-security.version>5.3.4.RELEASE</spring-security.version>
 		<springdoc.version>1.4.4</springdoc.version>
 		<jackson.version>2.11.2</jackson.version>
 		<jib.version>2.1.0</jib.version>
 		<lombok.version>1.18.12</lombok.version>
 		<projectreactor.version>3.3.9.RELEASE</projectreactor.version>
        <maven.compiler.source>14</maven.compiler.source>
        <maven.compiler.target>14</maven.compiler.target>
    </properties>

	<dependencies>
		<dependency>
	      <groupId>org.springdoc</groupId>
	      <artifactId>springdoc-openapi-webflux-ui</artifactId>
	      <version>${springdoc.version}</version>
 	    </dependency>
	   <dependency>
	      <groupId>org.springdoc</groupId>
	      <artifactId>springdoc-openapi-security</artifactId>
	      <version>${springdoc.version}</version>
	   </dependency>
   		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
		    <version>${spring-security.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-oauth2-resource-server</artifactId>
		    <version>${spring-security.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-oauth2-jose</artifactId>
		    <version>${spring-security.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>${lombok.version}</version>
		    <scope>provided</scope>
		</dependency>			
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-webflux</artifactId>
            <version>${spring-boot.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
            <version>${spring-boot.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.projectreactor</groupId>
		    <artifactId>reactor-core</artifactId>
		    <version>${projectreactor.version}</version>
		</dependency>	
	</dependencies>

	<build>
		<plugins>
			<!-- to be able to run springboot2 app with maven using command: 
				mvn clean spring-boot:run -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- to produce Docker Image localhost : mvn compile jib:dockerBuild remote 
				repository: mvn jib:build -Dimage=io.oodrive.davidkeller/bookstore/backend -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib.version}</version>
				<configuration>
					<from>
						<image>java:14</image>
					</from>
					<allowInsecureRegistries>false</allowInsecureRegistries>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>